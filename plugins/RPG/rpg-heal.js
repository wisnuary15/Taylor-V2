import {
  join
} from "path";
import {
  promises
} from "fs";
const handler = async (m, {
  args,
  usedPrefix,
  __dirname
}) => {
  let imgr = flaaa.getRandom(),
    user = (JSON.parse(await promises.readFile(join(__dirname, "../package.json")).catch(_ => ({}))), db.data.users[m.sender]);
  if (user.health >= 100) return m.reply("\nYour ‚ù§Ô∏èhealth is full!\n".trim());
  const heal = 40 + 4 * user.cat;
  let count = 1 * Math.max(1, Math.min(Number.MAX_SAFE_INTEGER, isNumber(args[0]) && parseInt(args[0]) || Math.round((100 - user.health) / heal)));
  if (user.potion < count) return await conn.sendFile(m.chat, imgr + "lowpotion", "", `*‚Äì„Äé INSUFFICIENT POTION „Äè‚Äì*\n è·¥è·¥ú …¥·¥á·¥á·¥Ö ·¥õ·¥è  ô·¥ú è ${count - user.potion} ·¥ç·¥è Ä·¥á ü•§·¥©·¥è·¥õ…™·¥è…¥ ·¥õ·¥è  ú·¥á·¥Ä ü.\n è·¥è·¥ú'·¥†·¥á ${user.potion} ü•§·¥©·¥è·¥õ…™·¥è…¥ …™…¥  ô·¥Ä…¢.\n‚õä‚îÅ‚îÄ‚îà‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚îÄ‚îÅ‚õä\nüíÅüèª‚Äç‚ôÇ ·¥õ…™·¥© :\n' ô·¥ú èü•§·¥©·¥è·¥õ…™·¥è…¥' | '·¥Äs·¥ã ·¥õ·¥è ·¥Ä ü ü'\n`.trim(), m);
  user.potion -= 1 * count, user.health += heal * count, user.healt += heal * count,
    await conn.sendFile(m.chat, imgr + "fullhealth", "", `*‚îÅ‚îà‚îÅ‚îà‚îÅ„Äé FULL HEALTH „Äè‚îÅ‚îà‚îÅ‚îà‚îÅ*\ns·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ${count} ü•§·¥©·¥è·¥õ…™·¥è…¥ ·¥ús·¥á ·¥õ·¥è  Ä·¥á·¥Ñ·¥è·¥†·¥á Ä  ú·¥á·¥Ä ü·¥õ ú.`, m);
};
handler.help = ["heal"], handler.tags = ["rpg"], handler.command = /^(heal)$/i;
export default handler;

function isNumber(number) {
  return number ? "number" == typeof(number = parseInt(number)) && !isNaN(number) : number;
}